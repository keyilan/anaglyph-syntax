@import "syntax-variables";

:host,
atom-text-editor {
	background-color: @syntax-background-color;
	color: @syntax-text-color;

	.wrap-guide {
		background-color: @syntax-wrap-guide-color;
	}

	.indent-guide {
		color: @syntax-indent-guide-color;
	}

	.invisible-character {
		.commentinvis;
	}

	.gutter {
		background-color: @syntax-gutter-background-color;
		color: @syntax-gutter-text-color;

		.line-number {
			&.cursor-line {
				.heavydarktext;
			}

			&.cursor-line-no-selection {
				color: @syntax-gutter-text-color-selected;
			}
		}
	}

	.fold-marker:after,
	.gutter .line-number.folded,
	.gutter .line-number:after {
		color: @ultralight;
	}

	.invisible {
		color: @syntax-text-color;
	}

	.cursor {
		color: @syntax-cursor-color;
	}

	.selection .region {
		background-color: @wrapguide;
	}
}

:host .search-results .marker .region,
atom-text-editor .search-results .marker .region {
	background-color: transparent;
	border: 1px solid @syntax-result-marker-color;
}

:host .search-results .marker.current-result .region,
atom-text-editor .search-results .marker.current-result .region {
	border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
	.commentinvis;
}

.keyword {
	.darktext;

	&.control {
		.darktext;
	}

	&.operator {
		color: @syntax-text-color;
	}

	&.other.special-method {
		.accentnormal;
	}

	&.other.unit {
		.lighttext;
	}
}

.storage {
	.darktext;
}

.constant {
	.lighttext;

	&.character.escape {
		.mediumtext;
	}

	&.numeric {
		.lighttext;
	}

	&.other.color {
		.mediumtext;
	}

	&.other.symbol {
		.plainlight;
	}
}

.variable {
	.softred;

	&.interpolation {
		color: darken(@red, 10%);
	}

	&.parameter.function {
		color: @syntax-text-color;
	}
}

.invalid.illegal {
	background-color: @red;
	color: @syntax-background-color;
}

.string {
	.plainlight;

	&.regexp {
		.mediumtext;

		.source.ruby.embedded {
			.lighttext;
		}
	}

	&.other.link {
		.softred;
	}
}

.punctuation {
	&.definition {
		&.comment {
			.commentinvis;
		}

		&.array,
		&.parameters,
		&.string,
		&.variable {
			color: @syntax-text-color;
		}

		&.heading,
		&.identity {
			.accentnormal;
		}

		&.bold {
			font-weight: bold;
		}

		&.italic {
			font-style: italic;
		}
	}

	&.section.embedded {
		.softred;
	}
}

.support {
	&.class {
		.softblue;
	}

	&.function {
		.mediumtext;

		&.any-method {
			.accentnormal;
		}
	}
}

.tag {
	//.heavydarktext;
	&.punctuation {
		.heavydarktext;
	}
}

.entity {
	&.name.function {
		.accentnormal;
	}

	&.name.type {
		.softblue;
	}

	&.other.inherited-class {
		.plainlight;
	}

	&.name.class,
	&.name.type.class {
		.plain;
	}

	&.name.section {
		.accentnormal;
	}

	&.name.tag {
		.mediumblur;

		&.punctuation {
			.mediumblur;
		}
	}

	&.other.attribute-name {
		.lighttext;

		&.id {
			.accentnormal;
		}
	}
}

.meta {
	&.class {
		color: @blue;
	}

	&.link {
		.lighttext;
	}

	&.require {
		.accentnormal;
	}

	&.selector {
		.darktext;
	}

	&.separator {
		background-color: @ultralight;
		color: @syntax-text-color;
	}
}

.none {
	color: @syntax-text-color;
}

.markup {
	&.bold {
		font-weight: bold;
	}

	&.changed {
		color: @redlight;
	}

	&.deleted {
		color: @red;
	}

	&.italic {
		font-style: italic;
	}

	&.heading .punctuation.definition.heading {
		.accentnormal;
	}

	&.inserted {
		.softblue;
	}

	&.list {
		.softred;
	}

	&.quote {
		.lighttext;
	}

	&.raw.inline {
		.plainlight;
	}
}

.source.gfm .markup {
	-webkit-font-smoothing: auto;

	&.heading {
		.plainlight;
	}
}

:host([mini]) .scroll-view,
atom-text-editor[mini] .scroll-view {
	padding-left: 1px;
}
